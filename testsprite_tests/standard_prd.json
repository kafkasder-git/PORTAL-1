{
  "meta": {
    "project": "Dernek Yönetim Sistemi",
    "date": "2025-10-29",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "Dernek Yönetim Sistemi is a modern, web-based SaaS platform designed to enable Turkish civil society organizations (associations) to manage their operations centrally and efficiently. The system integrates modules for donation and beneficiary management, scholarship programs, financial reporting, internal communication, and task management, built on a robust Next.js, React, and Appwrite stack with a focus on security, usability, and scalability.",
  "core_goals": [
    "Provide a unified platform for associations to manage donations, beneficiaries, scholarships, finances, communications, and operations.",
    "Ensure secure role-based access and efficient authentication for all user tiers.",
    "Deliver responsive and accessible UI with dark mode support and advanced form validations.",
    "Support comprehensive financial, operational, and user reporting functionalities.",
    "Maintain scalable, performant, and secure infrastructure with continuous monitoring and error tracking.",
    "Facilitate extensibility for future features such as mobile apps, advanced reporting, and multi-tenant capabilities."
  ],
  "key_features": [
    "Authentication system with Appwrite integration and role-based access control (RBAC).",
    "User and beneficiary comprehensive CRUD with profile and role management.",
    "Donation tracking with receipt management and financial reporting dashboards.",
    "Aid application workflow management with approval and status tracking.",
    "Kanban board style task management with drag-and-drop and assignment features.",
    "Calendar-based meeting scheduling and management.",
    "Internal messaging system supporting templates, bulk messaging, and institutional communication.",
    "Reusable generic data tables with search, pagination, sorting, filtering, and export options.",
    "Standardized UI component library with accessibility and dark mode features.",
    "Robust API layer for seamless backend communication and data validation.",
    "Security measures including CSRF protection, XSS and SQL injection prevention, and rate limiting.",
    "Performance monitoring, error tracking with Sentry, and extensive testing infrastructure."
  ],
  "user_flow_summary": [
    "User logs in via secure authentication page, session is maintained via HttpOnly cookies with CSRF token validation.",
    "User navigates through dashboard to access different operational modules based on role permissions.",
    "Lists of entities (users, beneficiaries, donations, tasks) can be searched, filtered, paginated, edited, or exported.",
    "Forms have integrated Zod validation, sanitized inputs, and real-time error feedback before submission.",
    "Task and meeting management feature drag-and-drop and calendar views for intuitive operational planning.",
    "Messaging module allows selecting templates and recipients for internal bulk or targeted communications.",
    "Financial dashboards display income and expense metrics with downloadable reports."
  ],
  "validation_criteria": [
    "All core modules must support full CRUD operations with correct role-based access controls.",
    "Authentication flows must prevent unauthorized access and CSRF attacks.",
    "Forms must enforce data integrity via Zod validation and prevent XSS or injection vulnerabilities.",
    "UI responsiveness must be maintained across devices and support dark mode without visual regressions.",
    "Performance benchmarks for page load times and bundle sizes must meet defined targets (e.g., FCP <1.5s).",
    "Error handling must log issues with Sentry and provide user-friendly messages without app crash.",
    "API endpoints rate limiting must prevent abuse and handle expected load gracefully.",
    "At least 95% code coverage is required across unit and E2E tests implemented with Vitest and Playwright."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 16",
      "React 19",
      "Tailwind CSS v4",
      "Appwrite",
      "Zustand",
      "TanStack Query",
      "React Hook Form",
      "Zod",
      "shadcn/ui",
      "Radix UI",
      "Framer Motion",
      "Sentry",
      "Vitest",
      "Playwright"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Appwrite-based authentication with role-based access control (RBAC), session management, CSRF protection, and login/logout functionality",
        "files": [
          "src/stores/authStore.ts",
          "src/app/api/auth/login/route.ts",
          "src/app/api/auth/logout/route.ts",
          "src/app/api/auth/session/route.ts",
          "src/middleware.ts",
          "src/lib/appwrite/client.ts",
          "src/lib/appwrite/server.ts",
          "src/types/auth.ts"
        ]
      },
      {
        "name": "User Management",
        "description": "Complete user CRUD operations with role-based permissions, user profile management, and role assignment",
        "files": [
          "src/app/(dashboard)/kullanici/page.tsx",
          "src/app/api/users/route.ts",
          "src/app/api/users/[id]/route.ts",
          "src/lib/api/appwrite-api.ts"
        ]
      },
      {
        "name": "Beneficiaries Management",
        "description": "Comprehensive beneficiary management system with list view, detail pages, quick add modal, advanced forms, and full CRUD operations",
        "files": [
          "src/app/(dashboard)/yardim/ihtiyac-sahipleri/page.tsx",
          "src/app/(dashboard)/yardim/ihtiyac-sahipleri/[id]/page.tsx",
          "src/components/forms/BeneficiaryForm.tsx",
          "src/components/forms/AdvancedBeneficiaryForm.tsx",
          "src/components/forms/BeneficiaryQuickAddModal.tsx",
          "src/app/api/beneficiaries/route.ts",
          "src/app/api/beneficiaries/[id]/route.ts",
          "src/lib/validations/beneficiary.ts",
          "src/types/beneficiary.ts"
        ]
      },
      {
        "name": "Donations Management",
        "description": "Donation tracking system with list view, donation forms, receipt management, and reporting capabilities",
        "files": [
          "src/app/(dashboard)/bagis/liste/page.tsx",
          "src/app/(dashboard)/bagis/raporlar/page.tsx",
          "src/app/(dashboard)/bagis/kumbara/page.tsx",
          "src/components/forms/DonationForm.tsx",
          "src/app/api/donations/route.ts",
          "src/app/api/donations/[id]/route.ts",
          "src/lib/api/appwrite-api.ts"
        ]
      },
      {
        "name": "Aid Applications Management",
        "description": "System for managing aid applications including application forms, status tracking, and approval workflow",
        "files": [
          "src/app/(dashboard)/yardim/basvurular/page.tsx",
          "src/app/(dashboard)/yardim/basvurular/[id]/page.tsx",
          "src/components/forms/AidApplicationForm.tsx",
          "src/app/api/aid-applications/route.ts",
          "src/app/api/aid-applications/[id]/route.ts"
        ]
      },
      {
        "name": "Tasks Management",
        "description": "Kanban board-based task management system with task creation, assignment, status tracking, and drag-and-drop functionality",
        "files": [
          "src/app/(dashboard)/is/gorevler/page.tsx",
          "src/components/tasks/KanbanBoard.tsx",
          "src/components/forms/TaskForm.tsx",
          "src/app/api/tasks/route.ts",
          "src/app/api/tasks/[id]/route.ts",
          "src/lib/validations/task.ts"
        ]
      },
      {
        "name": "Meetings Management",
        "description": "Calendar-based meeting management with meeting scheduling, calendar view, and meeting forms",
        "files": [
          "src/app/(dashboard)/is/toplantilar/page.tsx",
          "src/components/meetings/CalendarView.tsx",
          "src/components/forms/MeetingForm.tsx",
          "src/app/api/meetings/route.ts",
          "src/app/api/meetings/[id]/route.ts",
          "src/lib/validations/meeting.ts"
        ]
      },
      {
        "name": "Messages System",
        "description": "Internal messaging system with template selector, recipient selector, bulk messaging, and institutional messaging",
        "files": [
          "src/app/(dashboard)/mesaj/kurum-ici/page.tsx",
          "src/app/(dashboard)/mesaj/toplu/page.tsx",
          "src/components/messages/MessageTemplateSelector.tsx",
          "src/components/messages/RecipientSelector.tsx",
          "src/components/forms/MessageForm.tsx",
          "src/app/api/messages/route.ts",
          "src/app/api/messages/[id]/route.ts",
          "src/lib/validations/message.ts"
        ]
      },
      {
        "name": "Dashboard",
        "description": "Main dashboard page with statistics cards, quick access links, recent activities, and system overview",
        "files": [
          "src/app/(dashboard)/genel/page.tsx",
          "src/components/ui/stat-card.tsx",
          "src/components/layouts/PageLayout.tsx"
        ]
      },
      {
        "name": "Financial Dashboard",
        "description": "Financial overview dashboard with income/expense tracking and financial reports",
        "files": [
          "src/app/(dashboard)/financial-dashboard/page.tsx",
          "src/app/(dashboard)/fon/gelir-gider/page.tsx",
          "src/app/(dashboard)/fon/raporlar/page.tsx"
        ]
      },
      {
        "name": "Scholarships Management",
        "description": "Scholarship program management including student records, applications, and orphan sponsorship",
        "files": [
          "src/app/(dashboard)/burs/ogrenciler/page.tsx",
          "src/app/(dashboard)/burs/basvurular/page.tsx",
          "src/app/(dashboard)/burs/yetim/page.tsx"
        ]
      },
      {
        "name": "Settings Management",
        "description": "System settings and parameter management with configuration interface",
        "files": [
          "src/app/(dashboard)/settings/page.tsx",
          "src/app/(dashboard)/ayarlar/parametreler/page.tsx",
          "src/components/forms/ParameterSelect.tsx"
        ]
      },
      {
        "name": "Data Table Component",
        "description": "Reusable generic data table with search, pagination, sorting, filtering, and export functionality",
        "files": [
          "src/components/ui/data-table.tsx",
          "src/components/ui/responsive-table.tsx",
          "src/components/ui/pagination.tsx",
          "src/components/ui/filter-panel.tsx",
          "src/components/ui/export-buttons.tsx"
        ]
      },
      {
        "name": "UI Components Library",
        "description": "Comprehensive shadcn/ui-based component library with dark mode support, animations, and accessibility features",
        "files": [
          "src/components/ui/button.tsx",
          "src/components/ui/card.tsx",
          "src/components/ui/input.tsx",
          "src/components/ui/textarea.tsx",
          "src/components/ui/select.tsx",
          "src/components/ui/dialog.tsx",
          "src/components/ui/alert-dialog.tsx",
          "src/components/ui/tabs.tsx",
          "src/components/ui/badge.tsx",
          "src/components/ui/avatar.tsx",
          "src/components/ui/calendar.tsx",
          "src/components/ui/date-picker.tsx",
          "src/components/ui/progress.tsx",
          "src/components/ui/skeleton.tsx",
          "src/components/ui/tooltip.tsx",
          "src/components/ui/popover.tsx",
          "src/components/ui/separator.tsx",
          "src/components/ui/checkbox.tsx",
          "src/components/ui/radio-group.tsx",
          "src/components/ui/switch.tsx",
          "src/components/ui/loading-overlay.tsx",
          "src/components/ui/page-loader.tsx",
          "src/components/ui/empty-state.tsx",
          "src/components/ui/suspense-boundary.tsx",
          "src/components/ui/sparkles.tsx",
          "src/components/ui/animated-gradient.tsx",
          "src/components/ui/background-pattern.tsx",
          "src/components/ui/glass-card.tsx",
          "src/components/ui/text-hover-effect.tsx",
          "src/components/ui/stat-card.tsx",
          "src/components/ui/step-progress.tsx"
        ]
      },
      {
        "name": "Layout Components",
        "description": "Page layout wrapper and sidebar navigation with responsive design and dark mode support",
        "files": [
          "src/components/layouts/PageLayout.tsx",
          "src/components/layouts/Sidebar.tsx",
          "src/app/(dashboard)/layout.tsx"
        ]
      },
      {
        "name": "Form Components",
        "description": "Reusable form components with validation, error handling, and field grouping",
        "files": [
          "src/components/forms/BeneficiaryForm.tsx",
          "src/components/forms/AdvancedBeneficiaryForm.tsx",
          "src/components/forms/BeneficiaryQuickAddModal.tsx",
          "src/components/forms/DonationForm.tsx",
          "src/components/forms/AidApplicationForm.tsx",
          "src/components/forms/TaskForm.tsx",
          "src/components/forms/MeetingForm.tsx",
          "src/components/forms/MessageForm.tsx",
          "src/components/forms/ParameterSelect.tsx",
          "src/components/ui/form-field-group.tsx",
          "src/components/ui/file-upload.tsx"
        ]
      },
      {
        "name": "API Layer",
        "description": "API integration layer with Appwrite backend, mock API for development, error handling, and response standardization",
        "files": [
          "src/lib/api/appwrite-api.ts",
          "src/lib/api/appwrite-server-api.ts",
          "src/lib/api/mock-api.ts",
          "src/lib/api/mock-auth-api.ts",
          "src/lib/api/index.ts"
        ]
      },
      {
        "name": "Appwrite Integration",
        "description": "Appwrite backend integration with client and server SDKs, database setup, storage, permissions, and validation",
        "files": [
          "src/lib/appwrite/client.ts",
          "src/lib/appwrite/server.ts",
          "src/lib/appwrite/config.ts",
          "src/lib/appwrite/permissions.ts",
          "src/lib/appwrite/storage.ts",
          "src/lib/appwrite/setup-database.ts",
          "src/lib/appwrite/validation.ts",
          "src/lib/appwrite/test-connection.ts",
          "src/lib/appwrite/connectivity-test.ts",
          "src/lib/appwrite/sdk-guard.ts"
        ]
      },
      {
        "name": "Validation System",
        "description": "Zod-based validation schemas for forms, data validation, and type-safe validation",
        "files": [
          "src/lib/validations/beneficiary.ts",
          "src/lib/validations/task.ts",
          "src/lib/validations/meeting.ts",
          "src/lib/validations/message.ts"
        ]
      },
      {
        "name": "Security & Sanitization",
        "description": "Security utilities including input sanitization, XSS prevention, CSRF protection, and security headers",
        "files": [
          "src/lib/sanitization.ts",
          "src/lib/security.ts",
          "src/lib/csrf.ts",
          "src/lib/middleware/csrf-middleware.ts",
          "src/app/api/csrf/route.ts"
        ]
      },
      {
        "name": "Error Handling & Monitoring",
        "description": "Comprehensive error handling with error boundaries, Sentry integration, error logging, and user-friendly error messages",
        "files": [
          "src/components/error-boundary.tsx",
          "src/app/error.tsx",
          "src/app/global-error.tsx",
          "src/lib/errors.ts",
          "sentry.client.config.ts",
          "sentry.server.config.ts"
        ]
      },
      {
        "name": "Loading States & Suspense",
        "description": "Loading state management with multiple variants, Suspense boundaries, and loading overlays",
        "files": [
          "src/components/ui/loading-overlay.tsx",
          "src/components/ui/page-loader.tsx",
          "src/components/ui/suspense-boundary.tsx",
          "src/components/ui/skeleton.tsx"
        ]
      },
      {
        "name": "Performance Monitoring",
        "description": "Performance tracking, monitoring utilities, and performance optimization",
        "files": [
          "src/lib/performance.ts",
          "src/lib/debug/network-monitor.ts"
        ]
      },
      {
        "name": "Rate Limiting",
        "description": "Rate limiting implementation for API endpoints to prevent abuse and ensure fair usage",
        "files": [
          "src/lib/rate-limit.ts"
        ]
      },
      {
        "name": "Export Functionality",
        "description": "Data export utilities for CSV, Excel, and PDF generation",
        "files": [
          "src/lib/export/index.ts",
          "src/components/ui/export-buttons.tsx"
        ]
      },
      {
        "name": "Custom Hooks",
        "description": "Custom React hooks for infinite scroll, pagination, and data fetching patterns",
        "files": [
          "src/hooks/useInfiniteScroll.ts"
        ]
      },
      {
        "name": "API Routes",
        "description": "Next.js API routes for backend operations including CRUD endpoints, authentication, and file upload",
        "files": [
          "src/app/api/auth/login/route.ts",
          "src/app/api/auth/logout/route.ts",
          "src/app/api/auth/session/route.ts",
          "src/app/api/users/route.ts",
          "src/app/api/users/[id]/route.ts",
          "src/app/api/beneficiaries/route.ts",
          "src/app/api/beneficiaries/[id]/route.ts",
          "src/app/api/donations/route.ts",
          "src/app/api/donations/[id]/route.ts",
          "src/app/api/aid-applications/route.ts",
          "src/app/api/aid-applications/[id]/route.ts",
          "src/app/api/tasks/route.ts",
          "src/app/api/tasks/[id]/route.ts",
          "src/app/api/meetings/route.ts",
          "src/app/api/meetings/[id]/route.ts",
          "src/app/api/messages/route.ts",
          "src/app/api/messages/[id]/route.ts",
          "src/app/api/storage/upload/route.ts",
          "src/app/api/csrf/route.ts",
          "src/app/api/health/route.ts"
        ]
      },
      {
        "name": "Testing Infrastructure",
        "description": "Testing setup with Vitest for unit tests, Playwright for E2E tests, test utilities, and mock data",
        "files": [
          "vitest.config.ts",
          "playwright.config.cts",
          "src/__tests__/setup.ts",
          "src/__tests__/lib/sanitization.test.ts",
          "src/__tests__/lib/security.test.ts",
          "src/__tests__/integration/api.test.ts",
          "e2e/auth.spec.ts",
          "e2e/beneficiaries.spec.ts",
          "e2e/donations.spec.ts",
          "e2e/user-management.spec.ts",
          "src/lib/testing/mock-api-tester.ts",
          "src/lib/testing/mock-schema-validator.ts"
        ]
      },
      {
        "name": "Debug & Diagnostic Tools",
        "description": "Development and debugging utilities including hydration logger, store debugger, network monitoring, and connectivity testing",
        "files": [
          "src/lib/debug/hydration-logger.ts",
          "src/lib/debug/store-debugger.ts",
          "src/lib/debug/network-monitor.ts",
          "scripts/diagnose-appwrite.ts",
          "scripts/test-connectivity.ts",
          "scripts/validate-config.ts"
        ]
      },
      {
        "name": "Type Definitions",
        "description": "TypeScript type definitions for collections, authentication, beneficiaries, Appwrite, and application types",
        "files": [
          "src/types/auth.ts",
          "src/types/beneficiary.ts",
          "src/types/collections.ts",
          "src/types/appwrite.ts"
        ]
      },
      {
        "name": "Utilities",
        "description": "General utility functions including class name merging, date formatting, and helper functions",
        "files": [
          "src/lib/utils.ts",
          "src/lib/env-validation.ts"
        ]
      }
    ]
  }
}

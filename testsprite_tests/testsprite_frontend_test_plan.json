[
  {
    "id": "TC001",
    "title": "User Authentication Success",
    "description": "Verify that a user can successfully log in with valid credentials and receives a session cookie with CSRF token.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Enter valid username/email and password"
      },
      {
        "type": "action",
        "description": "Submit login form"
      },
      {
        "type": "assertion",
        "description": "Verify login is successful and session cookie with CSRF token is set"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Authentication Failure with Invalid Credentials",
    "description": "Verify that login fails with invalid credentials and appropriate error message is shown without a session cookie being set.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Enter invalid username/email and password"
      },
      {
        "type": "action",
        "description": "Submit login form"
      },
      {
        "type": "assertion",
        "description": "Verify login fails and error message is displayed without session cookie"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Role-Based Access Control Enforcement",
    "description": "Verify that users cannot access modules or pages outside of their assigned roles and permissions.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a user with limited role permissions"
      },
      {
        "type": "action",
        "description": "Attempt to navigate to restricted modules or perform unauthorized actions"
      },
      {
        "type": "assertion",
        "description": "Verify access is denied and user sees appropriate error or redirect"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "User Management CRUD Operations",
    "description": "Verify that users with permissions can create, read, update, and delete user accounts properly with role assignments.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as an admin user"
      },
      {
        "type": "action",
        "description": "Create a new user with valid data including role assignment"
      },
      {
        "type": "assertion",
        "description": "Verify user is created and visible in user list with proper role"
      },
      {
        "type": "action",
        "description": "Edit the newly created user's profile and role"
      },
      {
        "type": "assertion",
        "description": "Verify updates are saved and reflected correctly"
      },
      {
        "type": "action",
        "description": "Delete the user"
      },
      {
        "type": "assertion",
        "description": "Verify user is removed and no longer accessible"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Beneficiary Management Complete CRUD",
    "description": "Verify beneficiary list view, detail view, quick add modal, and full CRUD operations work with proper validations and role access.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as user with beneficiary management access"
      },
      {
        "type": "action",
        "description": "Open beneficiary list and verify data loading, search, filter, and pagination"
      },
      {
        "type": "action",
        "description": "Add a new beneficiary using the quick add modal with valid data"
      },
      {
        "type": "assertion",
        "description": "Verify the beneficiary is added to the list"
      },
      {
        "type": "action",
        "description": "Open a beneficiary detail page and edit beneficiary information"
      },
      {
        "type": "assertion",
        "description": "Verify beneficiary data updates successfully and validations function"
      },
      {
        "type": "action",
        "description": "Delete a beneficiary"
      },
      {
        "type": "assertion",
        "description": "Verify beneficiary is deleted from the system"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Donation Management with Receipt and Reporting",
    "description": "Test donation entry, receipt upload, tracking, and financial dashboard reporting functionalities including export options.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as user with donation management rights"
      },
      {
        "type": "action",
        "description": "Create a new donation record including valid donor details and amount"
      },
      {
        "type": "action",
        "description": "Upload receipt document for donation"
      },
      {
        "type": "assertion",
        "description": "Verify donation is recorded and receipt is attached"
      },
      {
        "type": "action",
        "description": "Navigate to financial dashboard and view income and expense metrics"
      },
      {
        "type": "assertion",
        "description": "Verify donation data is reflected accurately and reports are downloadable"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Aid Application Workflow Management",
    "description": "Verify that aid applications can be created, updated with status changes, approved or rejected with proper role permissions.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as user with aid application privileges"
      },
      {
        "type": "action",
        "description": "Create a new aid application with all mandatory fields and valid data"
      },
      {
        "type": "assertion",
        "description": "Verify application is saved and appears in application list"
      },
      {
        "type": "action",
        "description": "Update application status through various stages (e.g. pending, approved, rejected)"
      },
      {
        "type": "assertion",
        "description": "Verify status updates are saved and visible to authorized users only"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Kanban Task Management Functionality",
    "description": "Validate task creation, assignment, editing, status updates, and drag-and-drop movement across Kanban columns.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a user with task management permissions"
      },
      {
        "type": "action",
        "description": "Create a new task with detailed information and assign to a user"
      },
      {
        "type": "assertion",
        "description": "Verify task appears in Kanban board under appropriate status column"
      },
      {
        "type": "action",
        "description": "Drag and drop task to another column to update status"
      },
      {
        "type": "assertion",
        "description": "Verify task status updates correctly and persists after reload"
      },
      {
        "type": "action",
        "description": "Edit task details and save changes"
      },
      {
        "type": "assertion",
        "description": "Verify updated details are saved and visible"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Meeting Scheduling and Calendar View",
    "description": "Validate meeting creation, editing, and display on calendar view including edge cases like overlapping meetings.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a user with meeting management rights"
      },
      {
        "type": "action",
        "description": "Schedule new meeting with required fields including date, time, participants"
      },
      {
        "type": "assertion",
        "description": "Verify meeting appears on calendar correctly"
      },
      {
        "type": "action",
        "description": "Attempt to schedule overlapping meeting"
      },
      {
        "type": "assertion",
        "description": "Verify system handles overlap with warning or error"
      },
      {
        "type": "action",
        "description": "Edit existing meeting details"
      },
      {
        "type": "assertion",
        "description": "Verify updates are saved and calendar reflects changes"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Internal Messaging with Template and Bulk Messaging",
    "description": "Test sending internal messages using templates to single and multiple recipients including institution-wide messages.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as user with messaging privileges"
      },
      {
        "type": "action",
        "description": "Select message template and compose a new internal message"
      },
      {
        "type": "action",
        "description": "Send message to single recipient"
      },
      {
        "type": "assertion",
        "description": "Verify message delivery and receipt on recipient side"
      },
      {
        "type": "action",
        "description": "Send bulk message to multiple selected recipients"
      },
      {
        "type": "assertion",
        "description": "Verify all recipients receive the message"
      },
      {
        "type": "action",
        "description": "Send message to entire institution group"
      },
      {
        "type": "assertion",
        "description": "Verify institution-wide message is delivered appropriately"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "CRUD Operations with Data Table Features",
    "description": "Verify that entities listed in data tables support CRUD operations with search, pagination, sorting, filtering, and export functionality working correctly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open entity list in generic data table (e.g., users, donations)"
      },
      {
        "type": "action",
        "description": "Use search bar to find specific records"
      },
      {
        "type": "assertion",
        "description": "Verify search returns correct filtered results"
      },
      {
        "type": "action",
        "description": "Sort data by different columns ascending and descending"
      },
      {
        "type": "assertion",
        "description": "Verify data is sorted correctly"
      },
      {
        "type": "action",
        "description": "Apply column filters and verify filtered results"
      },
      {
        "type": "action",
        "description": "Navigate through paginated pages"
      },
      {
        "type": "assertion",
        "description": "Verify pagination and data loads correctly"
      },
      {
        "type": "action",
        "description": "Export data to CSV, Excel, and PDF formats"
      },
      {
        "type": "assertion",
        "description": "Verify exported files have correct data and formatting"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Form Validation and Security Checks",
    "description": "Verify the forms enforce Zod-based validation rules, sanitize inputs, prevent XSS and SQL injection, and provide real-time user feedback on errors.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open various forms (e.g., beneficiary form, donation form, task form)"
      },
      {
        "type": "action",
        "description": "Input invalid data (e.g., incorrect formats, script tags, SQL commands)"
      },
      {
        "type": "assertion",
        "description": "Verify validation errors are shown in real-time and submission is blocked"
      },
      {
        "type": "action",
        "description": "Input valid but malicious payload attempts"
      },
      {
        "type": "assertion",
        "description": "Verify inputs are sanitized and no script or injection executes"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "UI Responsiveness and Dark Mode Verification",
    "description": "Verify that UI components and pages render correctly and remain usable across device screen sizes and also correctly switch and maintain dark mode styling.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open application on desktop, tablet, and mobile screen sizes"
      },
      {
        "type": "assertion",
        "description": "Verify UI elements adjust layout properly without overflow or clipping"
      },
      {
        "type": "action",
        "description": "Toggle dark mode setting"
      },
      {
        "type": "assertion",
        "description": "Verify color schemes update correctly with no contrast or legibility issues"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "CSRF Protection and Session Security",
    "description": "Confirm that CSRF tokens are required on form submissions and that session cookies are HttpOnly and secure to prevent CSRF attacks.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to submit forms without valid CSRF token"
      },
      {
        "type": "assertion",
        "description": "Verify requests are rejected with appropriate error"
      },
      {
        "type": "action",
        "description": "Inspect cookies for HttpOnly and Secure flags"
      },
      {
        "type": "assertion",
        "description": "Verify session cookies have secure attributes set"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "API Rate Limiting Enforcement",
    "description": "Simulate rapid successive API requests to verify rate limiting prevents abuse and handles load gracefully with proper error responses.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send rapid multiple API calls to user and data endpoints"
      },
      {
        "type": "assertion",
        "description": "Verify requests are throttled and receive rate limit exceeded responses"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Error Handling and Sentry Logging",
    "description": "Induce errors in UI and API layers to verify application handles them gracefully, shows user-friendly messages, and logs errors to Sentry.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Force API failure by submitting invalid payloads or simulating network failure"
      },
      {
        "type": "assertion",
        "description": "Verify user sees friendly error message without app crash"
      },
      {
        "type": "action",
        "description": "Check Sentry dashboard for logged error"
      },
      {
        "type": "assertion",
        "description": "Verify error details are recorded in Sentry"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Performance Benchmarks on Core Pages",
    "description": "Measure First Contentful Paint (FCP) and bundle sizes on key pages to ensure performance targets (FCP <1.5s) are met.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to dashboard and major modules"
      },
      {
        "type": "assertion",
        "description": "Measure and verify FCP is under 1.5 seconds and bundle sizes are within limits"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Comprehensive Unit and E2E Test Coverage",
    "description": "Ensure at least 95% code coverage across unit and end-to-end tests using Vitest and Playwright respectively.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Run unit tests with Vitest and generate coverage report"
      },
      {
        "type": "assertion",
        "description": "Verify code coverage is 95% or greater"
      },
      {
        "type": "action",
        "description": "Run Playwright E2E tests across main user flows"
      },
      {
        "type": "assertion",
        "description": "Verify all E2E tests pass without failure"
      }
    ]
  }
]
